#!/usr/bin/perl
# File: checkmail
exit 0 unless (system "ps caux | grep `whoami` | grep NotificationCenter >/dev/null") == 0; # NotificationCenter instance is missing!
die "Module IO::Socket::SSL is missing!" unless (eval{require IO::Socket::SSL});
die "Module Mail::IMAPClient is missing!" unless(eval{require Mail::IMAPClient});
die "Module MIME::Base64 is missing!" unless(eval{require MIME::Base64});
die "Module YAML::XS is missing!" unless(eval{require YAML::XS});
die "A filename argument is missing!" if ($#ARGV == -1);

use utf8;
use YAML::XS qw/LoadFile/;
use MIME::Base64;
use Encode qw/encode decode/;

my $servers = LoadFile(join "", $ARGV[0]);
my $terminal_path = 'terminal-notifier';
my $limit_message = 70;

for ( keys %{$servers} )
{
  my $imap_host = $servers->{$_}{'host'};
  my $imap_port = $servers->{$_}{'port'};
  my $imap_user = $servers->{$_}{'user'};
  my $imap_pass = decode_base64($servers->{$_}{'pass'});

  my $imap = Mail::IMAPClient->new(
    User => $imap_user,
    Password => $imap_pass,
    Socket => IO::Socket::SSL->new(
      Proto => 'tcp',
      PeerAddr => $imap_host,
      PeerPort => $imap_port,
    ),
  ) || die join "", $_, " login failed; $!\n";

  $imap->select("INBOX") || die $!;

  my $msgs = $imap->search("UNSEEN");
  if (defined $msgs) {
    my $numbermsg = scalar @{$msgs};
    if ($numbermsg > 0) {
      use Time::localtime;
      my $tm=localtime;
      my $today=$tm->mday;
      my $msg_counter = 0;
      my $title = "";
      my $message = "";
      for my $h ( values %{ $imap->parse_headers(
        $msgs , "From" , "Subject" , "Date") } )
      {
        $msg_counter = $msg_counter + 1;
        my $from = $h->{'From'}->[0];
        if ($from =~ m/^(.*)\s<.*>.*/){ $from = $1; }
        if ($from =~ m/"([^"]*)"/){ $from = $1; }
        $from = decode("MIME-Header", $from );
        $title = join "", $from, " on ", $_, " (", $msg_counter, "/", $numbermsg, ")";
        my $subject = $h->{'Subject'}->[0];
        while ($subject =~ m/Re:\s*(.*)/) { $subject = $1; }
        # while ($subject =~ m/\s*\[.*\]\s*(.*)/) { $subject = $1; }
        $subject = decode("MIME-Header", $subject);
        if ($subject =~ m/^\s*$/) { $subject = "something unreadable"; } elsif (length $subject > $limit_message){ $subject = join "", substr($subject, 0, $limit_message - 1), "..."; }
        my $date = $h->{'Date'}->[0];
        if ($date =~ m/.*,\s(\d{1,2}).*/)
        {
          my $day = $1;
          SWITCH:
          {
            $1 == localtime->mday && do { $day_expression = "Today"; last SWITCH; };
            $1 == localtime(time - 24 * 60 * 60)->mday && do { $day_expression = "Yesterday"; last SWITCH; };
            my $day = $1;
              $day_expression = join "On the ", $day;
              if ($day =~ m/.*(\d)$/)
              {
                my $day_ord = "";
                if ($1 == 1) { $day_ord="st"; } elsif ($1 == 2) { $day_ord="nd"; } elsif ($1 == 3) { $day_ord="rd"; } else { $day_ord = "th"; }
                $day_expression = join "", $day_expression, $day_ord;
              }
            }
        }
        if ($date =~ m/.*(\d\d:\d\d:\d\d).*/){ $date = $1; }
        if (not (defined $day_expression)) { $day_expression = join "At ", $date; }
        $message = join "", $day_expression, " about ", $subject;
      # cleanup
      $title =~ s/"//g;
      $message =~ s/"//g;
      $title =~ s/\'/\\'/g;
      $message =~ s/\'/\\'/g;
      # command line
      my $cmd = join "", $terminal_path, " -sender com.apple.mail -title '", $title, "' -message \$'", $message, "'>/dev/null";
      system ($cmd);
      select(undef, undef, undef, 2);
      }
    }
  }
  $imap->logout();
}

# Usage:
# using this kind of "~/.servers.yaml" 400-chmoded file:
# M1: { host: imap.gmail.com, port: 993, user: my-my, pass: something-base64-encoded }
# M2: { host: imap.gmail.com, port: 993, user: my-my-2, pass: something-base64-encoded }
# OH: { host: imap.gmx.com, port: 993, user: oh-my-my, pass: something-base64-encoded }
# edit crontab with:
# 1-56/5 * * * * PATH=~/.tools/bin:~/.rvm/bin:~/.rvm/gems/ruby-XXXX-MY-VERSION-XXXX/bin:/usr/local/bin:$PATH checkmail ~/.servers.yaml
